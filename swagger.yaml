openapi: 3.0.4
info:
  title: Lark Vantage REST API
  description: |-
    The Lark Vantage REST API enables real-time exchange of member eligibility, medication history, and clinical data to inform intelligent GLP-1 PA and RA decisions, adherence management, and cost containment strategies within the PBM's ecosystem.
  termsOfService: https://lark.com # TODO, replace with the real ToS once we have one
  version: 1.0.0
servers:
  - url: https://api.lark.com
tags:
  - name: Member Data
    description: Retrieve prior authorization for partner members.
paths:
  /partners/{partner_id}/members/search:
    post:
      tags:
        - Member Data
      summary: Find members by characteristics.
      description: Find all member_ids based on first_name, last_name and dob.
      operationId: find_members
      parameters:
        - name: partner_id
          in: path
          description: partner id
          required: true
          schema:
            type: string
        - name: X-Lark-Vantage-API-Version
          in: header
          description: API version for this request.
          required: true
          schema:
            type: string
            enum:
              - 'v1'
            default: 'v1'
        - name: lookback_period_days
          in: query
          description: Lookback window to aggregate member engagement metrics.
          required: false
          schema:
            type: number
            enum:
              - 30
              - 60
              - 90
            default: 90
        - name: offset
          in: query
          description: The number of mebers to skip.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - name: limit
          in: query
          description: The maximum number of members to return.
          required: false
          schema:
            type: integer
            format: int32
            default: 50
            minimum: 1
            maximum: 1000
      requestBody:
        description: Retrieve all member_ids by first_name, last_name, dob.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberSearch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberSearch'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/Member'
                  page:
                    type: object
                    $ref: "#/components/schemas/Pagination"

        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Invalid OAuth Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Insufficient permissions to access this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Member Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /partners/{partner_id}/members/{member_id}:
    get:
      tags:
        - Member Data
      summary: Get a member by ID.
      description: Retrieve a single member data queried by member_id.
      operationId: get_member_by_id
      parameters:
        - name: partner_id
          in: path
          description: partner id
          required: true
          schema:
            type: string
        - name: member_id
          in: path
          description: member id
          required: true
          schema:
            type: string
        - name: X-Lark-Vantage-API-Version
          in: header
          description: API version for this request.
          required: true
          schema:
            type: string
            enum:
              - 'v1'
            default: 'v1'
        - name: lookback_period_days
          in: query
          description: Lookback window to aggregate member engagement metrics.
          required: false
          schema:
            type: number
            enum:
              - 30
              - 60
              - 90
            default: 90
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Invalid OAuth Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Insufficient permissions to access this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Member Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /partners/{partner_id}/members:
    get:
      tags:
        - Member Data
      summary: Find prior authorization data for all partner members.
      description: Since an active date can be provided which can provide all members since a given date.
      operationId: find_all_members
      parameters:
        - name: partner_id
          in: path
          description: ID of partner
          required: true
          schema:
            type: string
        - name: X-Lark-Vantage-API-Version
          in: header
          description: API version for this request.
          required: true
          schema:
            type: string
            enum:
              - 'v1'
            default: 'v1'
        - name: since_active_date
          in: query
          description: |
            A date string in YYYY-MM-DD format.
          required: false
          schema:
            type: string
            format: date
            example: 2025-07-08
        - name: lookback_period_days
          in: query
          description: Lookback window to aggregate member engagement metrics.
          required: false
          schema:
            type: number
            enum:
              - 30
              - 60
              - 90
            default: 90
        - name: offset
          in: query
          description: The number of mebers to skip.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - name: limit
          in: query
          description: The maximum number of members to return.
          required: false
          schema:
            type: integer
            format: int32
            default: 50
            minimum: 1
            maximum: 1000

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/Member'
                  page:
                    type: object
                    $ref: "#/components/schemas/Pagination"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Invalid OAuth Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Insufficient permissions to access this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Member Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

security:
  - larkAuth: []

components:
  securitySchemes:
    larkAuth:
      type: oauth2
      description: OAuth 2.0 Client Credentials flow for API authentication.
      flows:
        clientCredentials:
          tokenUrl: https://oauth.lark.com/oauth2/token
          scopes:
            api://vantage/partners/2886aace-2a23-5898-9db4-3022605ef5e8: Grants read access to member data.
  schemas:
    Member:
      description: Data and engagement metrics for a specific member, used in prior authorization processes.
      required:
        - id
        - first_name
        - last_name
        - dob
        - eligible
        - lark_start_date
        - program_name
        - initial_bmi
        - last_known_bmi
        - last_known_bmi_date
        - weight_loss_pct
        - last_known_weight_date
        - time_in_program
        - num_coaching_conversations
        - num_weight_measurements
        - activity_total_min
        - num_meals_logged
      type: object
      properties:
        id:
          type: string
          description: member id
          example: 8c3e1a7b-2e9f-4d0c-b1a2-3f4e5d6c7b8a
        first_name:
          type: string
          description: member's first name.
          example: John
        last_name:
          type: string
          description: member's last name.
          example: Doe
        dob:
          type: string
          format: date
          description: member's date of birth.
          example: 1958-01-01
        eligible:
          type: boolean
          description: If member is eligible or not.
          example: true
        lark_start_date:
          type: string
          format: date
          description: Lark Activation Date.
          example: 2025-01-01
        program_name:
          type: string
          description: Program that the member belongs to.
          example: Weight Loss
        initial_bmi:
          type: number
          format: float
          description: Initial BMI of member.
          example: 14.5
        last_known_bmi:
          type: number
          format: float
          description: Last tracked BMI of member.
          example: 14.5
        last_known_bmi_date:
          type: string
          format: date-time
          description: Last tracked BMI date of member.
          example: 2025-02-01T20:58:53Z
        weight_loss_pct:
          type: number
          format: float
          description: The weight loss percentages. Calculated using first known weight and last known weight.
          example: 5.0
        last_known_weight_date:
          type: string
          format: date-time
          description: The date of the last confirmed weight logged by the user after program starts.
          example: 2025-02-01T20:58:53Z
        time_in_program:
          type: integer
          description: Number of days member was in the program.
          example: 125
        num_coaching_conversations:
          type: integer
          description: The number of coaching conversations within the reporting period.
          example: 20
        num_weight_measurements:
          type: integer
          description: The number of weight measurements from a Lark device within the reporting time range.
          example: 10
        activity_total_min:
          type: integer
          description: The number of minutes of physical activity.
          example: 120
        num_meals_logged:
          type: integer
          description: The number of meals logged from a Lark device within the reporting time range.
          example: 10
        program_discontinued:
          type: boolean
          description: Whether member discontinued from the program.
          example: false
        program_discontinued_reason:
          type: string
          description: Reason why member discontinued from the program.
          example: Lost all weight
          nullable: true
    MemberSearch:
      description: Member characteristics used to retrieved member_id.
      required:
        - first_name
        - last_name
        - dob
      type: object
      properties:
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        dob:
          type: string
          example: 1958-01-01
    Pagination:
      type: object
      description: Metadata about pagination and total results.
      properties:
        offset:
          type: integer
          format: int32
          description: The current offset used for this page of results.
          example: 0
        limit:
          type: integer
          format: int32
          description: The maximum number of items requested for this page.
          example: 50
        next_offset:
          type: integer
          format: int32
          description: The offset value to use for the next page of results. Null if no more results.
          nullable: true
          example: 50
        total_items:
          type: integer
          format: int64
          description: The total number of items available across all pages.
          example: 1000
        has_more:
          type: boolean
          description: Indicates if there are more results beyond the current page.
          example: true
    Error:
      description: Error Handling Response.
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
